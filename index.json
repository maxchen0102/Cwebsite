[{"content":"歡迎來到我的第二篇文章 這是我使用 Hugo 建立的第二篇文章。Hugo 是一個非常強大的靜態網站生成器，它可以幫助我們快速建立網站。\n關於 Hugo Hugo 的特點包括：\n極快的建立速度 豐富的主題選擇 靈活的內容管理 強大的模板系統 如何嵌入 YouTube 影片 以下是如何在 Hugo 中嵌入 YouTube 影片的示例：\n代碼示例 以下是一個簡單的 HTML 代碼示例：\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;My Website\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Hello World!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Welcome to my website.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 結論 感謝您閱讀我的第二篇文章。希望您喜歡！\n","permalink":"https://maxchen0102.github.io/Cwebsite/posts/second-post/","summary":"\u003ch2 id=\"歡迎來到我的第二篇文章\"\u003e歡迎來到我的第二篇文章\u003c/h2\u003e\n\u003cp\u003e這是我使用 Hugo 建立的第二篇文章。Hugo 是一個非常強大的靜態網站生成器，它可以幫助我們快速建立網站。\u003c/p\u003e\n\u003ch2 id=\"關於-hugo\"\u003e關於 Hugo\u003c/h2\u003e\n\u003cp\u003eHugo 的特點包括：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e極快的建立速度\u003c/li\u003e\n\u003cli\u003e豐富的主題選擇\u003c/li\u003e\n\u003cli\u003e靈活的內容管理\u003c/li\u003e\n\u003cli\u003e強大的模板系統\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"如何嵌入-youtube-影片\"\u003e如何嵌入 YouTube 影片\u003c/h2\u003e\n\u003cp\u003e以下是如何在 Hugo 中嵌入 YouTube 影片的示例：\u003c/p\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/w7Ft2ymGmfc?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003ch2 id=\"代碼示例\"\u003e代碼示例\u003c/h2\u003e\n\u003cp\u003e以下是一個簡單的 HTML 代碼示例：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u0026lt;!DOCTYPE html\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eMy Website\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eHello World!\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003eh1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003eWelcome to my website.\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ebody\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;/\u003c/span\u003e\u003cspan class=\"nt\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"結論\"\u003e結論\u003c/h2\u003e\n\u003cp\u003e感謝您閱讀我的第二篇文章。希望您喜歡！\u003c/p\u003e","title":"Leetcode"},{"content":"RESTful API 設計最佳實踐 良好的 API 設計可以提高開發效率、改善用戶體驗並減少錯誤。本文將分享一些 RESTful API 設計的最佳實踐。\nURL 結構設計 RESTful API 應使用直觀的 URL 結構，以資源為中心：\n# 好的設計 GET /users # 獲取所有用戶 GET /users/123 # 獲取特定用戶 POST /users # 創建新用戶 PUT /users/123 # 更新用戶 DELETE /users/123 # 刪除用戶 # 避免的設計 GET /getUsers POST /createUser HTTP 方法的正確使用 每個 HTTP 方法都有特定用途：\nGET：讀取資源 POST：創建新資源 PUT：完全更新資源 PATCH：部分更新資源 DELETE：刪除資源 狀態碼 正確使用 HTTP 狀態碼可以提供明確的回應：\n2xx：成功\n200 OK：請求成功 201 Created：資源創建成功 204 No Content：請求成功但無返回內容 4xx：客戶端錯誤\n400 Bad Request：請求格式錯誤 401 Unauthorized：未授權 404 Not Found：資源不存在 5xx：服務器錯誤\n500 Internal Server Error：服務器內部錯誤 版本控制 API 版本控制有多種方式：\n# URL 路徑版本 /api/v1/users # 請求頭版本 Accept: application/vnd.company.v1+json 文檔化 好的 API 需要完整的文檔。考慮使用 Swagger/OpenAPI 來自動生成文檔。\n結論 遵循 RESTful 設計原則，可以創建出易於理解、使用和維護的 API。記住，良好的設計應該優先考慮簡單性和一致性。\n","permalink":"https://maxchen0102.github.io/Cwebsite/posts/restful-api-design/","summary":"\u003ch1 id=\"restful-api-設計最佳實踐\"\u003eRESTful API 設計最佳實踐\u003c/h1\u003e\n\u003cp\u003e良好的 API 設計可以提高開發效率、改善用戶體驗並減少錯誤。本文將分享一些 RESTful API 設計的最佳實踐。\u003c/p\u003e\n\u003ch2 id=\"url-結構設計\"\u003eURL 結構設計\u003c/h2\u003e\n\u003cp\u003eRESTful API 應使用直觀的 URL 結構，以資源為中心：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# 好的設計\nGET /users          # 獲取所有用戶\nGET /users/123      # 獲取特定用戶\nPOST /users         # 創建新用戶\nPUT /users/123      # 更新用戶\nDELETE /users/123   # 刪除用戶\n\n# 避免的設計\nGET /getUsers\nPOST /createUser\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"http-方法的正確使用\"\u003eHTTP 方法的正確使用\u003c/h2\u003e\n\u003cp\u003e每個 HTTP 方法都有特定用途：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGET\u003c/strong\u003e：讀取資源\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePOST\u003c/strong\u003e：創建新資源\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePUT\u003c/strong\u003e：完全更新資源\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePATCH\u003c/strong\u003e：部分更新資源\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDELETE\u003c/strong\u003e：刪除資源\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"狀態碼\"\u003e狀態碼\u003c/h2\u003e\n\u003cp\u003e正確使用 HTTP 狀態碼可以提供明確的回應：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e2xx\u003c/strong\u003e：成功\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e200 OK：請求成功\u003c/li\u003e\n\u003cli\u003e201 Created：資源創建成功\u003c/li\u003e\n\u003cli\u003e204 No Content：請求成功但無返回內容\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e4xx\u003c/strong\u003e：客戶端錯誤\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e400 Bad Request：請求格式錯誤\u003c/li\u003e\n\u003cli\u003e401 Unauthorized：未授權\u003c/li\u003e\n\u003cli\u003e404 Not Found：資源不存在\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e5xx\u003c/strong\u003e：服務器錯誤\u003c/p\u003e","title":"RESTful API 設計最佳實踐"},{"content":"後端架構設計指南 在設計可擴展、高效的後端系統時，有許多關鍵因素需要考慮。本文將介紹現代後端架構的幾個重要原則。\n1. 微服務 vs 單體架構 選擇適合您項目的架構模式取決於多種因素，包括團隊規模、項目複雜度以及業務需求。\n單體架構的優點 開發簡單 部署方便 測試相對容易 微服務架構的優點 服務獨立擴展 技術多樣性 故障隔離 2. 無狀態設計 無狀態設計允許系統更容易擴展：\n# 無狀態 API 示例 @app.route(\u0026#39;/api/user/\u0026lt;user_id\u0026gt;\u0026#39;, methods=[\u0026#39;GET\u0026#39;]) def get_user(user_id): # 從數據庫獲取數據，而不是從本地狀態 user = db.query(User).filter(User.id == user_id).first() return jsonify(user.to_dict()) 3. 緩存策略 適當的緩存實現可以顯著提高性能：\nRedis 用於快速數據存取 CDN 用於靜態資源 本地內存緩存用於高頻訪問數據 結論 好的後端架構應該是可擴展、可維護且安全的。根據項目需求選擇適合的技術堆棧，並遵循行業最佳實踐，將幫助您構建健壯的系統。\n","permalink":"https://maxchen0102.github.io/Cwebsite/posts/backend-architecture-intro/","summary":"\u003ch1 id=\"後端架構設計指南\"\u003e後端架構設計指南\u003c/h1\u003e\n\u003cp\u003e在設計可擴展、高效的後端系統時，有許多關鍵因素需要考慮。本文將介紹現代後端架構的幾個重要原則。\u003c/p\u003e\n\u003ch2 id=\"1-微服務-vs-單體架構\"\u003e1. 微服務 vs 單體架構\u003c/h2\u003e\n\u003cp\u003e選擇適合您項目的架構模式取決於多種因素，包括團隊規模、項目複雜度以及業務需求。\u003c/p\u003e\n\u003ch3 id=\"單體架構的優點\"\u003e單體架構的優點\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e開發簡單\u003c/li\u003e\n\u003cli\u003e部署方便\u003c/li\u003e\n\u003cli\u003e測試相對容易\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"微服務架構的優點\"\u003e微服務架構的優點\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e服務獨立擴展\u003c/li\u003e\n\u003cli\u003e技術多樣性\u003c/li\u003e\n\u003cli\u003e故障隔離\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-無狀態設計\"\u003e2. 無狀態設計\u003c/h2\u003e\n\u003cp\u003e無狀態設計允許系統更容易擴展：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 無狀態 API 示例\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nd\"\u003e@app.route\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;/api/user/\u0026lt;user_id\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;GET\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eget_user\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e):\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# 從數據庫獲取數據，而不是從本地狀態\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003edb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equery\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efilter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"n\"\u003euser_id\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ejsonify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eto_dict\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-緩存策略\"\u003e3. 緩存策略\u003c/h2\u003e\n\u003cp\u003e適當的緩存實現可以顯著提高性能：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRedis 用於快速數據存取\u003c/li\u003e\n\u003cli\u003eCDN 用於靜態資源\u003c/li\u003e\n\u003cli\u003e本地內存緩存用於高頻訪問數據\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"結論\"\u003e結論\u003c/h2\u003e\n\u003cp\u003e好的後端架構應該是可擴展、可維護且安全的。根據項目需求選擇適合的技術堆棧，並遵循行業最佳實踐，將幫助您構建健壯的系統。\u003c/p\u003e","title":"後端架構設計指南"},{"content":"這是我的第一篇文章內容。\n第一部分 這裡是正文\u0026hellip;\n第二部分 更多內容\u0026hellip;\n","permalink":"https://maxchen0102.github.io/Cwebsite/posts/my-first-post/","summary":"\u003cp\u003e這是我的第一篇文章內容。\u003c/p\u003e\n\u003ch2 id=\"第一部分\"\u003e第一部分\u003c/h2\u003e\n\u003cp\u003e這裡是正文\u0026hellip;\u003c/p\u003e\n\u003ch2 id=\"第二部分\"\u003e第二部分\u003c/h2\u003e\n\u003cp\u003e更多內容\u0026hellip;\u003c/p\u003e","title":"我的第一篇文章"}]