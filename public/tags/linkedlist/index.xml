<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linkedlist on Chris&#39;s Website</title>
    <link>https://leetcode666.com/tags/linkedlist/</link>
    <description>Recent content in Linkedlist on Chris&#39;s Website</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>© 2020-2025 程式思維 | All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 20 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://leetcode666.com/tags/linkedlist/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>鏈表（Linked List）：動態數據結構的基石</title>
      <link>https://leetcode666.com/categories/leetcode/linkedlist/linkedlist/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://leetcode666.com/categories/leetcode/linkedlist/linkedlist/</guid>
      <description>&lt;h1 id=&#34;鏈表linked-list&#34;&gt;鏈表（Linked List）&lt;/h1&gt;&#xA;&lt;p&gt;鏈表是一種常見的線性數據結構，它通過「節點」將數據元素順序連接。與數組不同，鏈表中的元素在內存中不必連續存儲，而是通過指針或引用彼此相連。&lt;/p&gt;&#xA;&lt;h2 id=&#34;鏈表的基本結構&#34;&gt;鏈表的基本結構&lt;/h2&gt;&#xA;&lt;p&gt;每個鏈表節點包含兩部分：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;數據域&lt;/strong&gt;：存儲節點的值&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;指針域&lt;/strong&gt;：指向下一個節點的引用&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;+-------------+    +-------------+    +-------------+&#xA;| 數據 | 下一個 |---&amp;gt;| 數據 | 下一個 |---&amp;gt;| 數據 | 下一個 |---&amp;gt;NULL&#xA;+-------------+    +-------------+    +-------------+&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;鏈表的種類&#34;&gt;鏈表的種類&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-單向鏈表singly-linked-list&#34;&gt;1. 單向鏈表（Singly Linked List）&lt;/h3&gt;&#xA;&lt;p&gt;每個節點只有一個指向下一節點的指針。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Head -&amp;gt; [Data|Next] -&amp;gt; [Data|Next] -&amp;gt; [Data|Next] -&amp;gt; NULL&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-雙向鏈表doubly-linked-list&#34;&gt;2. 雙向鏈表（Doubly Linked List）&lt;/h3&gt;&#xA;&lt;p&gt;每個節點有兩個指針，分別指向前一個和後一個節點。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NULL &amp;lt;- [Prev|Data|Next] &amp;lt;-&amp;gt; [Prev|Data|Next] &amp;lt;-&amp;gt; [Prev|Data|Next] -&amp;gt; NULL&#xA;        ^&#xA;        |&#xA;       Head&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-循環鏈表circular-linked-list&#34;&gt;3. 循環鏈表（Circular Linked List）&lt;/h3&gt;&#xA;&lt;p&gt;最後一個節點指向第一個節點，形成一個環。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;     +------------------------------------------+&#xA;     |                                          |&#xA;     v                                          |&#xA;    Head -&amp;gt; [Data|Next] -&amp;gt; [Data|Next] -&amp;gt; [Data|Next]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;鏈表操作的時間複雜度&#34;&gt;鏈表操作的時間複雜度&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;操作&lt;/th&gt;&#xA;          &lt;th&gt;單向鏈表&lt;/th&gt;&#xA;          &lt;th&gt;雙向鏈表&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;訪問元素&lt;/td&gt;&#xA;          &lt;td&gt;O(n)&lt;/td&gt;&#xA;          &lt;td&gt;O(n)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;在頭部插入&lt;/td&gt;&#xA;          &lt;td&gt;O(1)&lt;/td&gt;&#xA;          &lt;td&gt;O(1)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;在尾部插入&lt;/td&gt;&#xA;          &lt;td&gt;O(n)/O(1)*&lt;/td&gt;&#xA;          &lt;td&gt;O(1)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;在中間插入&lt;/td&gt;&#xA;          &lt;td&gt;O(n)&lt;/td&gt;&#xA;          &lt;td&gt;O(n)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;刪除節點&lt;/td&gt;&#xA;          &lt;td&gt;O(n)&lt;/td&gt;&#xA;          &lt;td&gt;O(1)**&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;* 如果保存了尾指針&#xA;** 已知節點位置的情況下&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
